apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-service
  namespace: tastytrade
  labels:
    app.kubernetes.io/name: user-service
    app.kubernetes.io/component: authentication
    app.kubernetes.io/part-of: tastytrade-platform
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: user-service
  template:
    metadata:
      labels:
        app.kubernetes.io/name: user-service
        app.kubernetes.io/component: authentication
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8084"
        prometheus.io/path: "/actuator/prometheus"
    spec:
      imagePullSecrets:
      - name: registry-secret
      containers:
      - name: user-service
        image: tastytrade/user-service:latest
        ports:
        - containerPort: 8084
          name: http
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: "kubernetes"
        - name: SPRING_DATASOURCE_URL
          value: "jdbc:postgresql://timescaledb-service:5432/tastytrade"
        - name: SPRING_DATASOURCE_USERNAME
          valueFrom:
            configMapKeyRef:
              name: postgres-config
              key: POSTGRES_USER
        - name: SPRING_DATASOURCE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: DB_PASSWORD
        - name: TASTYTRADE_APP_JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: JWT_SECRET
        - name: TASTYTRADE_APP_JWT_EXPIRATION_MS
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: JWT_EXPIRATION_MS
        - name: TASTYTRADE_APP_JWT_REFRESH_EXPIRATION_MS
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: JWT_REFRESH_EXPIRATION_MS
        envFrom:
        - configMapRef:
            name: app-config
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /actuator/health/liveness
            port: 8084
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /actuator/health/readiness
            port: 8084
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /actuator/health
            port: 8084
          initialDelaySeconds: 45
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
---
apiVersion: v1
kind: Service
metadata:
  name: user-service
  namespace: tastytrade
  labels:
    app.kubernetes.io/name: user-service
    app.kubernetes.io/component: authentication
spec:
  type: ClusterIP
  ports:
  - port: 8084
    targetPort: 8084
    name: http
  selector:
    app.kubernetes.io/name: user-service
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: user-service-hpa
  namespace: tastytrade
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: user-service
  minReplicas: 2
  maxReplicas: 8
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80