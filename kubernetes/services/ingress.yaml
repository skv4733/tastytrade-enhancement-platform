apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: tastytrade-ingress
  namespace: tastytrade
  labels:
    app.kubernetes.io/name: tastytrade-platform
    app.kubernetes.io/component: ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    # WebSocket support for market data streaming
    nginx.ingress.kubernetes.io/websocket-services: "market-data-service"
    nginx.ingress.kubernetes.io/proxy-set-headers: |
      X-Forwarded-For $proxy_add_x_forwarded_for
      X-Forwarded-Proto $scheme
      X-Real-IP $remote_addr
    # CORS configuration
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "Content-Type, Authorization, X-Requested-With"
    nginx.ingress.kubernetes.io/cors-max-age: "3600"
    # Security headers
    nginx.ingress.kubernetes.io/server-snippet: |
      add_header X-Frame-Options "SAMEORIGIN" always;
      add_header X-Content-Type-Options "nosniff" always;
      add_header X-XSS-Protection "1; mode=block" always;
      add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - api.tastytrade.local
    - ws.tastytrade.local
    secretName: tls-secret
  rules:
  # Main API Gateway
  - host: api.tastytrade.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: api-gateway-service
            port:
              number: 8080
  # WebSocket and Streaming endpoints
  - host: ws.tastytrade.local
    http:
      paths:
      - path: /ws
        pathType: Prefix
        backend:
          service:
            name: market-data-service
            port:
              number: 8082
      - path: /api/market-data/stream
        pathType: Prefix
        backend:
          service:
            name: market-data-service
            port:
              number: 8082
---
# Internal Ingress for monitoring and management
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: tastytrade-internal-ingress
  namespace: tastytrade
  labels:
    app.kubernetes.io/name: tastytrade-platform
    app.kubernetes.io/component: internal-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: basic-auth
    nginx.ingress.kubernetes.io/auth-realm: 'Tastytrade Platform Internal Access'
    # Restrict to internal networks
    nginx.ingress.kubernetes.io/whitelist-source-range: "10.0.0.0/8,172.16.0.0/12,192.168.0.0/16"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - admin.tastytrade.local
    secretName: tls-secret
  rules:
  - host: admin.tastytrade.local
    http:
      paths:
      # RabbitMQ Management
      - path: /rabbitmq
        pathType: Prefix
        backend:
          service:
            name: rabbitmq-service
            port:
              number: 15672
      # Service health checks and metrics
      - path: /health/api-gateway
        pathType: Prefix
        backend:
          service:
            name: api-gateway-service
            port:
              number: 8080
      - path: /health/user-service
        pathType: Prefix
        backend:
          service:
            name: user-service
            port:
              number: 8084
      - path: /health/market-data
        pathType: Prefix
        backend:
          service:
            name: market-data-service
            port:
              number: 8082
      - path: /health/options-calculator
        pathType: Prefix
        backend:
          service:
            name: options-calculator-service
            port:
              number: 8085
      - path: /health/delta-monitor
        pathType: Prefix
        backend:
          service:
            name: delta-monitor-service
            port:
              number: 8086
---
# Load Balancer for external access (if needed)
apiVersion: v1
kind: Service
metadata:
  name: tastytrade-loadbalancer
  namespace: tastytrade
  labels:
    app.kubernetes.io/name: tastytrade-platform
    app.kubernetes.io/component: loadbalancer
  annotations:
    # Cloud provider specific annotations
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-scheme: "internet-facing"
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
    # Rate limiting
    service.beta.kubernetes.io/aws-load-balancer-additional-resource-tags: "Environment=production,Project=tastytrade"
spec:
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: 80
    name: http
    protocol: TCP
  - port: 443
    targetPort: 443
    name: https
    protocol: TCP
  selector:
    app.kubernetes.io/name: nginx-ingress
---
# Network Policy for security
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: tastytrade-network-policy
  namespace: tastytrade
  labels:
    app.kubernetes.io/name: tastytrade-platform
    app.kubernetes.io/component: security
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow ingress from ingress controller
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    ports:
    - protocol: TCP
      port: 8080
    - protocol: TCP
      port: 8081
    - protocol: TCP
      port: 8082
    - protocol: TCP
      port: 8083
    - protocol: TCP
      port: 8084
    - protocol: TCP
      port: 8085
    - protocol: TCP
      port: 8086
    - protocol: TCP
      port: 8087
    - protocol: TCP
      port: 8088
  # Allow internal service communication
  - from:
    - podSelector:
        matchLabels:
          app.kubernetes.io/part-of: tastytrade-platform
  egress:
  # Allow egress to internet for external APIs
  - {}
  # Allow egress to infrastructure services
  - to:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: timescaledb
    ports:
    - protocol: TCP
      port: 5432
  - to:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: redis
    ports:
    - protocol: TCP
      port: 6379
  - to:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: rabbitmq
    ports:
    - protocol: TCP
      port: 5672